# Fleet release workflow
name: Fleet release

on:
  push:
    tags:
      - v**
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write # this is important, it's how we authenticate with Vault

env:
  GOARCH: amd64
  CGO_ENABLED: 0
  PUBLIC_REGISTRY: ghcr.io

jobs:
  build-fleet:
    runs-on: ubuntu-latest

    env:
      IS_HOTFIX: ${{ contains(github.ref, '-hotfix-') }}

    if: github.repository == 'dnse-tech/fleet'
    steps:
      - name: Check out Fleet
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Install Ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo

      - name: Check for code changes
        continue-on-error: ${{ contains(github.ref, 'rc') }}
        run: |
          ./.github/scripts/check-for-auto-generated-changes.sh
          go mod verify

      - name: Run unit tests
        continue-on-error: ${{ contains(github.ref, 'rc') }}
        run: go test -cover -tags=test $(go list ./... | grep -v -e /e2e -e /integrationtests -e /benchmarks)

      - name: Run integration tests
        continue-on-error: ${{ contains(github.ref, 'rc') }}
        env:
          SETUP_ENVTEST_VER: v0.0.0-20250218120612-6f6111124902
          ENVTEST_K8S_VERSION: 1.32
        run: ./.github/scripts/run-integration-tests.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PUBLIC_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        id: goreleaser
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}